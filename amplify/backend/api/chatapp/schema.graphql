type User @model {
  id: ID!
  name: String!
  imageUri:String
  status:String
  chatRoomUser: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
  messages: [Message]
}

type ChatRoomUser
@model
@key(name: "byUser", fields: ["userID", "chatRoomID"])
@key(name: "byChatRoom", fields: ["chatRoomID", "userID"]) {
  id: ID!
  userID: ID!
  chatRoomID: ID!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}

type ChatRoom @model {
  id: ID!
  group:Boolean
  groupName:String
  chatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
  messages: [Message] @connection(keyName:"byChatRoom",fields:["id"])
}

type Message
 @model
 @key(
 name: "byChatRoom",
 fields: ["chatRoomID","createdAt"],
 queryField:"messagesByChatRoom")
{
  id:ID!
  createdAt: String!
  content:String!
  userID: ID!
  chatRoomID: ID!
  awsLink:Boolean
  senderName:String
  user: User @connection(fields:["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}

type S3Object{
  bucket:String!
  region:String!
  key:String!
}

type Picture @model @auth(rules:[{allow:owner}]){
  id:ID!
  name:String
  owner:String

  #Reference the S3Object type from a field.
  file:S3Object
}
